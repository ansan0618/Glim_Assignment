#include <string>
#include <vector>
#include <iostream>

using namespace std;

int solution(int a, int b, int c, int d) {
    int answer = 0;
    int nNum[4] = { a, b, c, d };
    int nNumSame[4] = { 0, 0, 0, 0 };
    int sum = 0;

    for (int i = 0;i < 4;i++) {
        for (int j = 0;j < 4;j++) {
            if (nNum[i] == nNum[j]) {
                nNumSame[i]++;
            }
        }
    }
    for (int i = 0;i < 4;i++)
        sum += nNumSame[i];
    switch (sum) {
    case 16:
        answer = 1111 * nNum[0];
        break;
    case 10:
        int idx;
        for (int i = 0;i < 4;i++)
            if (nNumSame[i] == 1) {
                idx = i;
                break;
            }
        if (idx == 0) {
            answer = (10 * nNum[idx + 1] + nNum[idx]);
        }
        else
            answer = (10 * nNum[idx - 1] + nNum[idx]);
        answer = answer * answer;
        break;
    case 8:
        for (int i = 0;i < 3;i++) {
            for (int j = i + 1;i < 4;i++) {
                if (nNum[i] > nNum[j]) {
                    answer = (nNum[i] + nNum[j]) * (nNum[i] - nNum[j]);
                }
                else if (nNum[j] > nNum[i]) {
                    answer = (nNum[i] + nNum[j]) * (nNum[j] - nNum[i]);
                }
            }
        }
        break;
    case 6:
        answer = 1;
        
        for (int i = 0;i < 4;i++) {
            if (nNumSame[i] == 1) {
                answer = answer * nNum[i];
            }
        }
        break;
    case 4:
        answer = nNum[0];
        for (int i = 1;i < 4;i++) {
            if (answer > nNum[i])
                answer = nNum[i];
        }
        break;
    }
    return answer;
}

int main() {
    int a[5] = { 2, 4, 6, 2, 6 };
    int b[5] = { 2, 1, 3, 5, 4 };
    int c[5] = { 2, 4, 3, 2, 2 };
    int d[5] = { 2, 4, 6, 6, 5 };
    int answer;

    for (int i = 0;i < sizeof(a) / sizeof(int);i++) {
        answer = solution(a[i], b[i], c[i], d[i]);
        std::cout << answer << std::endl;
    }

}